// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(PlaninarenjeContext))]
    partial class PlaninarenjeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.Property<int>("IDDogadjaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojUcesnika")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImeDogadjaja")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImeVrhaDogadjaja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PlaninaIDPlanine")
                        .HasColumnType("int");

                    b.Property<int>("TezinaUspona")
                        .HasColumnType("int");

                    b.HasKey("IDDogadjaja");

                    b.HasIndex("PlaninaIDPlanine");

                    b.ToTable("Dogadjaji");
                });

            modelBuilder.Entity("Models.IdeNaDogadjaj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DogadjajiIDDogadjaja")
                        .HasColumnType("int");

                    b.Property<int?>("PlaninariIDPlaninara")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DogadjajiIDDogadjaja");

                    b.HasIndex("PlaninariIDPlaninara");

                    b.ToTable("PlaninariDogadjaji");
                });

            modelBuilder.Entity("Models.Organizuje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DogadjajiIDDogadjaja")
                        .HasColumnType("int");

                    b.Property<int?>("PlaninarskaDrustvaIDPlaninarskogDrustva")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DogadjajiIDDogadjaja");

                    b.HasIndex("PlaninarskaDrustvaIDPlaninarskogDrustva");

                    b.ToTable("PlaninarskDrustvaDogadjaji");
                });

            modelBuilder.Entity("Models.Planina", b =>
                {
                    b.Property<int>("IDPlanine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImeNajvisegVrha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImePlanine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaksimalnaVisina")
                        .HasColumnType("int");

                    b.Property<int>("TezinaPlanine")
                        .HasColumnType("int");

                    b.HasKey("IDPlanine");

                    b.ToTable("Planine");
                });

            modelBuilder.Entity("Models.Planinar", b =>
                {
                    b.Property<int>("IDPlaninara")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("IDPlaninarskogDrustva1")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("JMBG")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Spremnost")
                        .HasColumnType("int");

                    b.HasKey("IDPlaninara");

                    b.HasIndex("IDPlaninarskogDrustva1");

                    b.ToTable("Planinar");
                });

            modelBuilder.Entity("Models.PlaninarskoDrustvo", b =>
                {
                    b.Property<int>("IDPlaninarskogDrustva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojClana")
                        .HasColumnType("int");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("GodisnjaClanarina")
                        .HasColumnType("int");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ImePlaninarskogDrustva")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDPlaninarskogDrustva");

                    b.ToTable("PlaninarskaDrustva");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.HasOne("Models.Planina", "Planina")
                        .WithMany("Dogadjaj")
                        .HasForeignKey("PlaninaIDPlanine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planina");
                });

            modelBuilder.Entity("Models.IdeNaDogadjaj", b =>
                {
                    b.HasOne("Models.Dogadjaj", "Dogadjaji")
                        .WithMany("Planinari")
                        .HasForeignKey("DogadjajiIDDogadjaja");

                    b.HasOne("Models.Planinar", "Planinari")
                        .WithMany("Dogadjaji")
                        .HasForeignKey("PlaninariIDPlaninara");

                    b.Navigation("Dogadjaji");

                    b.Navigation("Planinari");
                });

            modelBuilder.Entity("Models.Organizuje", b =>
                {
                    b.HasOne("Models.Dogadjaj", "Dogadjaji")
                        .WithMany("PlaninarskaDrustva")
                        .HasForeignKey("DogadjajiIDDogadjaja");

                    b.HasOne("Models.PlaninarskoDrustvo", "PlaninarskaDrustva")
                        .WithMany("Dogadjaji")
                        .HasForeignKey("PlaninarskaDrustvaIDPlaninarskogDrustva");

                    b.Navigation("Dogadjaji");

                    b.Navigation("PlaninarskaDrustva");
                });

            modelBuilder.Entity("Models.Planinar", b =>
                {
                    b.HasOne("Models.PlaninarskoDrustvo", "IDPlaninarskogDrustva")
                        .WithMany("Planinari")
                        .HasForeignKey("IDPlaninarskogDrustva1");

                    b.Navigation("IDPlaninarskogDrustva");
                });

            modelBuilder.Entity("Models.Dogadjaj", b =>
                {
                    b.Navigation("Planinari");

                    b.Navigation("PlaninarskaDrustva");
                });

            modelBuilder.Entity("Models.Planina", b =>
                {
                    b.Navigation("Dogadjaj");
                });

            modelBuilder.Entity("Models.Planinar", b =>
                {
                    b.Navigation("Dogadjaji");
                });

            modelBuilder.Entity("Models.PlaninarskoDrustvo", b =>
                {
                    b.Navigation("Dogadjaji");

                    b.Navigation("Planinari");
                });
#pragma warning restore 612, 618
        }
    }
}
